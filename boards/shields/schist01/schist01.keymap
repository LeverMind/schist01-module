/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <zephyr/dt-bindings/input/input-event-codes.h>

#include <behaviors.dtsi>
#include <behaviors/studio_unlock.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
//#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>

//Layers
#define default_layer 0
#define layer1 1
#define layer2 2


/ {
tpad0_listener {
                compatible = "zmk,input-listener"; 
                device = <&tpad0>;
                status = "okay";
                input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>,<&zip_xy_scaler 3 1>;
                
                precise {
                    layers = <layer1>;
                    input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>,<&zip_xy_scaler 1 2>;
                };

                scroll{
                    layers = <layer2>;
                    input-processors = <&zip_xy_scaler 1 30>,<&zip_xy_to_scroll_mapper>;
                };
                
        };
        
        //windows snipping tool
        ZMK_MACRO(snip,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &kp LGUI>
                ;
        )
        //workflwy duplicate shortcut
        ZMK_MACRO(wf_dup,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp D>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &kp LALT>
                ;
        )

keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Layer0";
            bindings = <
                &kp W              &kp B 
                &kp P     &kp F    &kp M      &kp U     &lt 2 Y
                &kp R     &kp S    &kp N      &kp I     &kp G   &kp LGUI           &kp BACKSPACE
                &kp O     &kp A    &kp T      &kp E     &kp Z   &lt 1 C_PLAY_PAUSE &kp SPACE    &kp LALT
                &lt 1 C   &kp D    &kp L      &kp H     &kp V   &kp LSHIFT         &lt 2 RET    &kp LCTRL
            >;
        };
        layer1 {
            display-name = "Layer1";
            bindings = <
                &kp Q              &kp K 
                &kp J     &kp N7   &kp N8     &kp N9    &mkp MCLK
                &kp MINUS &kp N4   &kp N5     &kp N6    &kp X      &kp C_VOL_UP  &kp DEL
                &kp EQUAL &kp N1   &kp N2     &kp N3    &mkp LCLK  &kp C_VOL_DN  &kp PG_DN    &kp ESC
                &kp LCTRL &kp N0   &kp COMMA  &kp DOT   &mkp RCLK  &kp C_PREV    &kp C_NEXT   &kp PG_UP
            >;
        };
        layer2 {
            display-name = "Layer2";
            bindings = <
                &bootloader          &studio_unlock
                &kp F1     &kp F2    &kp F3         &kp F4    &kp F5
                &kp GRAVE  &kp BSLH  &kp CAPS          &kp HOME  &kp END     &bt BT_CLR &kp UP
                &kp SLASH  &kp SEMI  &kp SQT        &kp LBKT  &kp RBKT    &kp LEFT   &kp DOWN  &bt BT_NXT
                &kp LCTRL  &kp LALT  &kp TAB        &kp LGUI  &kp RET     &wf_dup    &snip     &kp RIGHT
            >;
        };
        layer3 {
            status = "reserved";
        };
        layer4 {
            status = "reserved";
        };
    };
};

